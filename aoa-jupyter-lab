# Copyright (c) Teradata.
# Distributed under the terms of the Modified BSD License.
ARG BASE_CONTAINER=jupyter/datascience-notebook:lab-3.0.14
FROM $BASE_CONTAINER

ARG AOA_CLI_VERSION=4.0

# change to root user to install java
USER root

# Add sample notebooks
ADD ["notebooks/", "/home/jovyan/work/"]

# Install OpenJDK-8
RUN apt-get update && \
    apt-get install -y openjdk-8-jdk && \
    apt-get install -y ant && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /var/cache/oracle-jdk8-installer;

# Fix certificate issues
RUN apt-get update && \
    apt-get install -y ca-certificates-java && \
    apt-get clean && \
    update-ca-certificates -f && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /var/cache/oracle-jdk8-installer;

# Setup JAVA_HOME -- useful for docker commandline
ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/
RUN export JAVA_HOME

# Upgrade pip
RUN pip install --quiet --no-cache-dir --upgrade pip

# Install Teradata Extensions and some other dependencies
ARG JUPYTERHUB_VERSION=1.4.1
RUN pip install --quiet --no-cache-dir \
    'xgboost==0.90' \
    'sklearn2pmml==0.60.0' \
    'keras>=2.2.0' \
    'shap==0.36.0' \
    aoa>=$AOA_CLI_VERSION \
    'tdextensions' \
    jupyterhub==$JUPYTERHUB_VERSION \
    'jupyterlab-git>=0.30.1' \
    'jupyter-resource-usage' \
    's3cmd' \
    'tensorflow' \
    'teradataml'

ENV JUPYTER_ENABLE_LAB=yes

# R pre-requisites
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    unixodbc \
    unixodbc-dev \
    r-cran-rodbc \
    && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Fix for devtools https://github.com/conda-forge/r-devtools-feedstock/issues/4
RUN ln -s /bin/tar /bin/gtar

# R packages check
RUN conda install --quiet --yes \
    'r-base=4.0.3' \
    'r-caret=6.*' \
    'r-crayon=1.3*' \
    'r-devtools=2.3*' \
    'r-forecast=8.13*' \
    'r-hexbin=1.28*' \
    'r-htmltools=0.5*' \
    'r-htmlwidgets=1.5*' \
    'r-irkernel=1.1*' \
    'r-nycflights13=1.0*' \
    'r-randomforest=4.6*' \
    'r-rcurl=1.98*' \
    'r-rmarkdown=2.3*' \
    'r-rodbc=1.3*' \
    'r-rsqlite=2.2*' \
    'r-shiny=1.5*' \
    'r-tidyverse=1.3*' \
    'unixodbc=2.3.*' \
    'r-tidymodels=0.1*' \
    'r-e1071' \
    'r-gbm' \
    'r-optimx' \
    && conda clean --all -f -y

# Install Teradata R packages
RUN Rscript -e "install.packages('remotes', repos='http://cloud.r-project.org')" && \
    Rscript -e "remotes::install_version('dbplyr', version='1.4.4', repos='http://cloud.r-project.org')" && \
    Rscript -e "install.packages('tdplyr',repos=c('https://teradata-download.s3.amazonaws.com','https://cloud.r-project.org'))" && \
    Rscript -e "install.packages('r2pmml', repos='http://cloud.r-project.org')"

# Install NodeJS and npm
RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - &&\
    apt-get install -y nodejs openssh-client && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Teradata JupyterLab Extensions
ENV TERADATA_SQL_KERNEL_VERSION=3.0.0-ec03292021
ENV PATH=$PATH:/teradata/teradatasqllinux_$TERADATA_SQL_KERNEL_VERSION
RUN mkdir /teradata
RUN curl https://dslab-utils.s3-us-west-2.amazonaws.com/teradatasqllinux_$TERADATA_SQL_KERNEL_VERSION.zip -o /teradata/teradatasqllinux_$TERADATA_SQL_KERNEL_VERSION.zip && \
    unzip /teradata/teradatasqllinux_$TERADATA_SQL_KERNEL_VERSION.zip -d /teradata/teradatasqllinux_$TERADATA_SQL_KERNEL_VERSION && \
    rm -f /teradata/teradatasqllinux_$TERADATA_SQL_KERNEL_VERSION.zip
RUN jupyter kernelspec install /teradata/teradatasqllinux_$TERADATA_SQL_KERNEL_VERSION/teradatasql &&\
    jupyter labextension install /teradata/teradatasqllinux_$TERADATA_SQL_KERNEL_VERSION/teradata_database_explorer-$TERADATA_SQL_KERNEL_VERSION.tgz &&\
    jupyter labextension install /teradata/teradatasqllinux_$TERADATA_SQL_KERNEL_VERSION/teradata_resultset_renderer-$TERADATA_SQL_KERNEL_VERSION.tgz &&\
    jupyter labextension install /teradata/teradatasqllinux_$TERADATA_SQL_KERNEL_VERSION/teradata_sqlhighlighter-$TERADATA_SQL_KERNEL_VERSION.tgz &&\
    jupyter labextension install /teradata/teradatasqllinux_$TERADATA_SQL_KERNEL_VERSION/teradata_connection_manager-$TERADATA_SQL_KERNEL_VERSION.tgz &&\
    jupyter labextension install /teradata/teradatasqllinux_$TERADATA_SQL_KERNEL_VERSION/teradata_preferences-$TERADATA_SQL_KERNEL_VERSION.tgz

# Install Teradata ODBC
ENV TERADATA_ODBC_VERSION=1700
ENV TERADATA_ODBC_PKG=linux_x8664.17.00.00.22-1
ENV TERADATA_ODBC_BUILD=17.00.00.22-1
RUN curl https://dslab-utils.s3-us-west-2.amazonaws.com/tdodbc${TERADATA_ODBC_VERSION}__${TERADATA_ODBC_PKG}.tar.gz | tar xvz -C /teradata/
RUN cd /teradata/tdodbc${TERADATA_ODBC_VERSION} && \
    ./setup_wrapper.sh -r tdodbc${TERADATA_ODBC_VERSION}-${TERADATA_ODBC_BUILD}.x86_64.rpm -s

# Install SQL Server ODBC
RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - &&\
    curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list &&\
    apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql17 &&\
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Fix permissions
RUN fix-permissions "${CONDA_DIR}" && fix-permissions "/home/${NB_USER}"

# Allow to run java with sudo without asking for password
RUN echo "${NB_USER} ALL=(ALL) NOPASSWD: /usr/bin/java" >> /etc/sudoers

# Install JupyterLab Git extension
#RUN pip install jupyterlab-git==0.30.1

# Install private CA certs for aoa cli, pip & conda
#COPY ca-private.crt /etc/ssl/certs/private-ca.pem
#COPY ca-private.crt /opt/conda/ssl/certs/private-ca.pem
#RUN cat /opt/conda/ssl/certs/private-ca.pem >> /opt/conda/ssl/cert.pem
#RUN cat /opt/conda/ssl/certs/private-ca.pem >> /etc/ssl/certs/ca-certificates.crt
#ENV REQUESTS_CA_BUNDLE=/opt/conda/ssl/cert.pem

# Add AOA CLI config file
RUN mkdir -p /home/jovyan/.aoa && \
    echo 'aoa_credentials: YWRtaW46YWRtaW4=' >> /home/jovyan/.aoa/config.yaml && \
    echo 'aoa_url: http://aoa-core:8080' >> /home/jovyan/.aoa/config.yaml   && \
    echo 'auth_mode: basic' >> /home/jovyan/.aoa/config.yaml

# Fix permissions
RUN fix-permissions "${CONDA_DIR}/ssl" && fix-permissions "/home/${NB_USER}/.aoa" && fix-permissions "/teradata"

# change to default user ${NB_USER}, since we don't want to run as root
ENV HOME=/home/${NB_USER}
WORKDIR $HOME
USER ${NB_USER}
